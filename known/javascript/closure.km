{
    "root": {
        "data": {
            "text": "闭包"
        },
        "children": [
            {
                "data": {
                    "id": 0,
                    "created": 1642054593013,
                    "text": "当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在词法作用域之外执行",
                    "expandState": "expand",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": 0,
                            "created": 1642054687596,
                            "text": "闭包函数可能持有了词法作用域的变量，使其垃圾回收不会回收这部分词法作用域",
                            "layout": null
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": 0,
                            "created": 1642054937801,
                            "text": "典型的一些回调函数（在使用闭包）",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642054972393,
                                    "text": "定时器",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642054981105,
                                    "text": "事件监听器",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642054991321,
                                    "text": "Ajax请求",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642055000472,
                                    "text": "跨窗口通信",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642055012041,
                                    "text": "Web Workers",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642055024586,
                                    "text": "其他异步、同步任务的回调函数",
                                    "layout": null
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": 0,
                    "created": 1642054839826,
                    "text": "for循环和闭包",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": 0,
                            "created": 1642054858643,
                            "text": "代码",
                            "layout": null,
                            "note": "```\nfor (var i = 1; i <= 5; i++) {\n  setTimeout(() => {\n    console.log(i)\n  }, i * 1000)\n}\n\n```"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642055205296,
                                    "text": "这段程序期待每隔1s输入一个自增数字，从1开始",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642055247589,
                                    "text": "实际上，该程序每隔1s输出了6",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642055338901,
                                            "text": "为什么？",
                                            "layout": null
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": 0,
                                                    "created": 1642055345118,
                                                    "text": "定时的回调作为闭包持有了i，但是回调等待所有同步执行完毕才开始依次回调，此时，i已经为6，多个回调持有了同一个为6的i",
                                                    "layout": null
                                                },
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642055456236,
                                            "text": "怎们解决？",
                                            "layout": null
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": 0,
                                                    "created": 1642055523331,
                                                    "text": "办法1",
                                                    "expandState": "expand",
                                                    "layout": null
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055472340,
                                                            "text": "从闭包角度，我们需要每运行一次同步循环，持有住当前的i",
                                                            "layout": null
                                                        },
                                                        "children": []
                                                    },
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055534787,
                                                            "text": "所以同步代码里，需要另外的闭包，持有住当前的i",
                                                            "layout": null
                                                        },
                                                        "children": []
                                                    },
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055569854,
                                                            "text": "代码",
                                                            "layout": null,
                                                            "note": "```\nfor (var i = 1; i <= 5; i++) {\n  (function (j) {\n    setTimeout(function timer () {\n      console.log(j)\n    }, j * 1000)\n  })(i)\n}\n\n```"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            },
                                            {
                                                "data": {
                                                    "id": 0,
                                                    "created": 1642055605860,
                                                    "text": "办法2",
                                                    "layout": null
                                                },
                                                "children": [
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055612540,
                                                            "text": "ES6块作用域",
                                                            "layout": null
                                                        },
                                                        "children": []
                                                    },
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055925168,
                                                            "text": "代码",
                                                            "layout": null,
                                                            "note": "```\nfor (var i = 1; i <= 5; i++) {\n  const j = i\n  setTimeout(() => {\n    console.log(j)\n  }, j * 1000)\n}\n\n```"
                                                        },
                                                        "children": []
                                                    },
                                                    {
                                                        "data": {
                                                            "id": 0,
                                                            "created": 1642055623545,
                                                            "text": "代码",
                                                            "layout": null,
                                                            "note": "```\nfor (let i = 1; i <= 5; i++) {\n  setTimeout(() => {\n    console.log(i)\n  }, i * 1000)\n}\n\n```"
                                                        },
                                                        "children": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": 0,
                    "created": 1642056226486,
                    "text": "模块",
                    "note": "known\\javascript\\module.km",
                    "layout": null
                },
                "children": [
                    {
                        "data": {
                            "id": 0,
                            "created": 1642056241668,
                            "text": "闭包模块模式",
                            "layout": null
                        },
                        "children": [
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642056264107,
                                    "text": "代码",
                                    "layout": null,
                                    "note": "```\nfunction CoolModule () {\n  var something = 'cool'\n  var another = [1, 2, 3]\n\n  function doSomething () {\n    console.log(something)\n  }\n\n  function doAnother () {\n       console.log(another.join('!'))\n  } return {\n    doSomething: doSomething,  doAnother: doAnother\n  }\n}\n\nvar foo = CoolModule()\nfoo.doSomething()\nfoo.doAnother()\n\n```"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642056489498,
                                    "text": "模块(CoolModule)的返回，本质是模块的公共API",
                                    "layout": null
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642056385274,
                                    "text": "模块不一定返回对象，也可以是内部函数",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642056416747,
                                            "text": "例如jQuery中，jQuery和$标识符就是jQuery模块的公共API，本身是函数",
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642056618032,
                                    "text": "形成模块模式的2个必要条件",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642056631024,
                                            "text": "必须有外部的封闭函数，该函数必须至少被调用一次(每次调用都会创建一个新的模块实例)",
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642056679048,
                                            "text": "封闭函数必须返回至少一个内部函数，这样内部的函数才能在私有作用域中形成闭包，并且可以访问或者修改私有的状态",
                                            "layout": null
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642056799862,
                                            "text": "⚠️依照上述，则只返回数据属性的不是模块",
                                            "layout": null
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642056884702,
                                    "text": "单例模式（只需要一个模块实例）",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642056919165,
                                            "text": "代码",
                                            "layout": null,
                                            "note": "```\nvar foo = (function CoolModule () {\n  var something = 'cool'\n  var another = [1, 2, 3]\n\n  function doSomething () {\n    console.log(something)\n  }\n\n  function doAnother () {\n    console.log(another.join('!'))\n  }\n\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother\n  }\n})()\n\nfoo.doSomething()\nfoo.doAnother()\n\n```"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": 0,
                                    "created": 1642060679082,
                                    "text": "⚠️模块的示例代码",
                                    "layout": null
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": 0,
                                            "created": 1642060774181,
                                            "text": "代码",
                                            "layout": null,
                                            "note": "```\nvar MyModules = (function () {\n  var modules = {}\n  /**\n   * @param {*} name 模块的名字\n   * @param {*} deps 模块的依赖\n   * @param {*} impl 模块的API\n   *\n   * */\n  function define (name, deps, impl) {\n    for (var i = 0; i < deps.length; i++) {\n      deps[i] = modules[deps[i]]\n    }\n    modules[name] = impl.apply(impl, deps)\n  }\n\n  // 获取模块\n  function get (name) {\n    return modules[name]\n  }\n\n  return { define: define, get: get }\n})()\n\n// 这里定义了一个bar模块，没有依赖其他模块\n// 有一个API方法hello\nMyModules.define('bar', [], function () {\n  function hello (who) {\n    return 'Let me introduce : ' + who\n  }\n  return { hello: hello }\n})\n\n// 定义了foo模块，依赖bar模块\n// 有一个API方法awesome\nMyModules.define('foo', ['bar'], function (bar) {\n  var hungry = 'hippo'\n  function awesome () {\n    console.log(bar.hello(hungry).toUpperCase())\n  }\n  return { awesome: awesome }\n})\n\nvar bar = MyModules.get('bar')\nvar foo = MyModules.get('foo')\nconsole.log(bar.hello('hippo'))\nfoo.awesome()\n\n```"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },
    "template": "default",
    "theme": "fresh-blue",
    "version": "1.4.43"
}